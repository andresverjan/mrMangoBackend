
type Request {
  _id: ID!
  userId: String!
  createdAt: String
  updatedAt: String
  status: String
  total: String!
  details: [RequestDetails]
  observations: [RequestObs!]
}
type RequestDetails {
  id: ID
  name: String
  value: Float!
  additions: [AdditionDetails]
  observations: [RequestObs!]
}

type RequestObs {
  _id: ID
  requestId: ID
  userId: String!
  createdAt: String
  observation: String!
  status: String
}
type AdditionDetails{
  id: ID
  name: String!
  value: String!
}
input RequestInput {
  userId: String!
  total: String!
  details: [RequestDetailsInput2!]
}

input AdditionDetailsInput{
  id: ID
  name: String
  value: String!
  img: String
}

input RequestDetailsInput2 {
  subproductoId: ID
  value: String!
  additions: [AdditionDetailsInput]
}

input RequestInputUpdate {
  _id: ID!
  userId: String!
  latlng: String
  createdAt: String
  updatedAt: String
  status: String
  total: String!
  details: [RequestDetailInputUpdate!]
  observations: RequestObsInput
}

input RequestObsInput {
  userId: String!
  createdAt: String
  observation: String!
  requestId: ID!
}
input RequestInputDelete {
  _id: ID!
}
type Query {
  requests: [Request!]
  getDetailByRequestId(requestId:ID!): Request!
  getMyRequest(userId:ID!):[Request!]
}
type Mutation {
  createRequest(request: RequestInput): Request
  updateRequest(request: RequestInputUpdate): Request
  deleteRequest(request: RequestInputDelete): Request
  cancelRequest(request: RequestInputUpdate): Request 
}

