
scalar Date
type Request {
  _id: ID!
  userId: String!
  createdAt: Date
  updatedAt: Date
  status: String
  total: String!
  details: [RequestDetails]
  observations: [Observation!]
}

type RequestDetails {
  subproducto: Subproducto          #imported from Subproducto Type!
  name: String
  value: Float!
  additions: [AdditionDetailsInput2] #imported from AddiontionsType!
  observations: [Observation!]
}

input RequestInput {
  userId: String!
  total: String!
  details: [RequestDetailsInput2!]
}

input RequestDetailsInput2 {
  subproducto: ID
  value: String!
  additions: [AdditionDetailsInput]
  observations: [observationInput]
} 

input AdditionDetailsInput{
  addition: ID
  value: String!
}

input RequestInputUpdate {
  _id: ID!
  userId: String!
  latlng: String
  createdAt: String
  updatedAt: String
  status: String
  total: String!
  details: [RequestDetailInputUpdate!]
  observations: RequestObsInput
}

input RequestObsInput {
  userId: String!
  createdAt: String
  observation: String!
  requestId: ID!
}

input RequestInputDelete {
  _id: ID!
}

input RequestInputCancelar{
_id: ID!
observations: String

}

input RequestInputAccept{
  _id: ID!
}


type Query {
  requests: [Request!]
  getDetailByRequestId(requestId:ID!): Request!
  getMyRequest(userId:ID!):[Request!]
}

type Mutation {
  createRequest(request: RequestInput): Request

  updateRequest(request: RequestInputUpdate): Request
  deleteRequest(request: RequestInputDelete): Request
  cancelRequest(request: RequestInputCancelar): Request
  acceptRequest(request: RequestInputAccept):Request
   
} 
